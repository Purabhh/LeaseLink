üè† SwipeHousing (Web App Only)
A web platform where buyers/renters swipe through property listings and connect with landlords upon a mutual match. Think Tinder, but for renting and buying homes.

üë• User Roles
1. Buyer/Renter
Profile Fields:
Full Name


Email


Credit Score (optional visibility toggle)


Monthly Income


Desired Move-in Date


Budget Range


Preferred ZIP Codes / Cities


Preferences (bedrooms, bathrooms, pet-friendly, etc.)


Capabilities:
Swipe left/right on listings


View own swipes and matches


Chat with landlords if match is approved


Update profile and preferences



2. Landlord/Seller
Profile Fields:
Full Name


Email


Phone (optional)


Landlord Verification Docs (optional upload to Azure Blob)


Property Listing Fields:
Title (e.g., ‚ÄúModern 2BR in Queens‚Äù)


ZIP Code / Address


Rent Price


Lease Terms (e.g., 12-month, short-term)


Bedrooms/Bathrooms


Move-in Date


Amenities (e.g., A/C, pet-friendly, laundry)


Property Images (uploaded to Azure Blob)


Min Credit Score


Auto-Reject Filter Toggle (e.g., reject if score < 600)


Capabilities:
Add/edit/delete listings


See swipes from buyers


Approve/deny swipe requests


Chat with matched buyers



üß± Core Features (Web)
üß≠ 1. Swipe Interface (Buyers)
Swipe cards: Left = skip, Right = Interested


Pulls listing data from backend enriched with RentCast API


Filter bar: location, price, bedrooms, etc.



üß† 2. Match System
Buyer swipes right ‚Üí stored in backend


Landlord sees buyer profile under ‚Äúinterested users‚Äù


Landlord hits ‚úÖ Approve ‚Üí match is created


Both users can now message each other in the chat panel



üí¨ 3. Chat System (WebSockets)
Once matched, users get a private chat room


Built using Azure Web PubSub for real-time communication


Messages stored in DB for history



üìä 4. RentCast Integration
When landlord adds listing ‚Üí backend calls RentCast API


Pulls rent estimate, market trends, valuation


Data shown on property cards:


Rent estimate vs listed price


Market rating


Days on market estimate



üß∞ Tech Stack (Azure-first Web App)
üîß Frontend
React.js


Tailwind CSS


React Router / Zustand for client-side routing & state


Axios for API calls


‚öôÔ∏è Backend
Node.js + Express (hosted on Azure App Service)


Azure Functions for:


Swipe handling


Match approval


RentCast enrichment


Notification triggers


üíæ Database
Azure Cosmos DB (NoSQL, stores users, listings, swipes, matches, chats)
 OR


Azure SQL (if going relational)


‚òÅÔ∏è Azure Services Used
Functionality
Azure Service
Authentication
Azure AD B2C
Backend hosting
Azure App Service
Real-time chat
Azure Web PubSub
Data storage
Azure Cosmos DB / Azure SQL
Image hosting
Azure Blob Storage
Notifications
Azure Notification Hubs or SendGrid
Serverless logic
Azure Functions

